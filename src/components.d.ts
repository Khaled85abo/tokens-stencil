/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface CommentInput {
        "parentCommentId": number | undefined;
        "postId": number;
    }
    interface CustomButton {
        "text": string;
    }
    interface MyComponent {
        /**
          * The first name
         */
        "first": string;
        /**
          * The last name
         */
        "last": string;
        /**
          * The middle name
         */
        "middle": string;
    }
    interface MyTab {
        "active": boolean;
        "name": string;
    }
    interface MyTabs {
        "activeTab": string;
    }
}
export interface MyTabCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLMyTabElement;
}
declare global {
    interface HTMLCommentInputElement extends Components.CommentInput, HTMLStencilElement {
    }
    var HTMLCommentInputElement: {
        prototype: HTMLCommentInputElement;
        new (): HTMLCommentInputElement;
    };
    interface HTMLCustomButtonElement extends Components.CustomButton, HTMLStencilElement {
    }
    var HTMLCustomButtonElement: {
        prototype: HTMLCustomButtonElement;
        new (): HTMLCustomButtonElement;
    };
    interface HTMLMyComponentElement extends Components.MyComponent, HTMLStencilElement {
    }
    var HTMLMyComponentElement: {
        prototype: HTMLMyComponentElement;
        new (): HTMLMyComponentElement;
    };
    interface HTMLMyTabElement extends Components.MyTab, HTMLStencilElement {
    }
    var HTMLMyTabElement: {
        prototype: HTMLMyTabElement;
        new (): HTMLMyTabElement;
    };
    interface HTMLMyTabsElement extends Components.MyTabs, HTMLStencilElement {
    }
    var HTMLMyTabsElement: {
        prototype: HTMLMyTabsElement;
        new (): HTMLMyTabsElement;
    };
    interface HTMLElementTagNameMap {
        "comment-input": HTMLCommentInputElement;
        "custom-button": HTMLCustomButtonElement;
        "my-component": HTMLMyComponentElement;
        "my-tab": HTMLMyTabElement;
        "my-tabs": HTMLMyTabsElement;
    }
}
declare namespace LocalJSX {
    interface CommentInput {
        "parentCommentId"?: number | undefined;
        "postId"?: number;
    }
    interface CustomButton {
        "text"?: string;
    }
    interface MyComponent {
        /**
          * The first name
         */
        "first"?: string;
        /**
          * The last name
         */
        "last"?: string;
        /**
          * The middle name
         */
        "middle"?: string;
    }
    interface MyTab {
        "active"?: boolean;
        "name"?: string;
        "onTabActivate"?: (event: MyTabCustomEvent<{ name: string }>) => void;
    }
    interface MyTabs {
        "activeTab"?: string;
    }
    interface IntrinsicElements {
        "comment-input": CommentInput;
        "custom-button": CustomButton;
        "my-component": MyComponent;
        "my-tab": MyTab;
        "my-tabs": MyTabs;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "comment-input": LocalJSX.CommentInput & JSXBase.HTMLAttributes<HTMLCommentInputElement>;
            "custom-button": LocalJSX.CustomButton & JSXBase.HTMLAttributes<HTMLCustomButtonElement>;
            "my-component": LocalJSX.MyComponent & JSXBase.HTMLAttributes<HTMLMyComponentElement>;
            "my-tab": LocalJSX.MyTab & JSXBase.HTMLAttributes<HTMLMyTabElement>;
            "my-tabs": LocalJSX.MyTabs & JSXBase.HTMLAttributes<HTMLMyTabsElement>;
        }
    }
}
